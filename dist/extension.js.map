{"version":3,"sources":["webpack://vsx0/./node_modules/@aero/centra/createRequest.js","webpack://vsx0/./node_modules/@aero/centra/lib/CentraRequest.js","webpack://vsx0/./node_modules/@aero/centra/lib/CentraResponse.js","webpack://vsx0/./src/elements/createNewPaste.ts","webpack://vsx0/./src/extension.ts","webpack://vsx0/./src/namespaces/deleteNamespace.ts","webpack://vsx0/./src/namespaces/modify.ts","webpack://vsx0/./src/namespaces/register.ts","webpack://vsx0/./src/namespaces/resetToken.ts","webpack://vsx0/./src/namespaces/submitNew.ts","webpack://vsx0/./src/util/Constants.ts","webpack://vsx0/./src/util/StorageProvider.ts","webpack://vsx0/./src/util/http.ts","webpack://vsx0/./src/util/msg.ts","webpack://vsx0/external \"http\"","webpack://vsx0/external \"https\"","webpack://vsx0/external \"path\"","webpack://vsx0/external \"querystring\"","webpack://vsx0/external \"url\"","webpack://vsx0/external \"vscode\"","webpack://vsx0/external \"zlib\"","webpack://vsx0/webpack/bootstrap","webpack://vsx0/webpack/startup"],"names":["CentraRequest","module","exports","url","method","path","http","https","qs","zlib","URL","CentraResponse","this","httpMethod","data","sendDataAs","reqHeaders","streamEnabled","compressionEnabled","coreOptions","a1","a2","Object","keys","forEach","queryKey","searchParams","append","relativePath","pathname","join","sendAs","Buffer","isBuffer","toLowerCase","stringify","JSON","headerName","timeout","send","json","body","text","Promise","resolve","reject","hasOwnProperty","byteLength","options","protocol","host","hostname","port","search","headers","req","resHandler","res","centraRes","stream","pipe","createGunzip","createInflate","on","err","chunk","_addChunk","request","Error","write","end","coreRes","alloc","statusCode","concat","parse","toString","namespace","token","customKey","createNewPaste","replace","POST","key","value","error","success","baseUrl","warn","context","console","log","paste_disposable","vscode","commands","registerCommand","editor","window","activeTextEditor","document","getText","selection","tokens","secrets","get","parsedTokens","quickPickOptionsToShow","push","selectNameSpace","showQuickPick","placeHolder","includes","startsWith","showInputBox","prompt","registerOrSubmitExisting","subscriptions","allTokens","getAll","nameSpaceToDelete","delete","nameSpaceToModify","newToken","set","invite","register","resetToken","nameSpace","userToken","e","storageProvider","objectToParse","parsedObject","store","tokenObjectToStoreLater","deleteAll","returnobject","bodyObject","response","c","header","errortrace","errormsg","msg","info","showInformationMessage","showWarningMessage","showErrorMessage","require","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","call"],"mappings":"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","file":"extension.js","sourcesContent":["const CentraRequest = require('./lib/CentraRequest');\n\nmodule.exports = (url, method) => new CentraRequest(url, method);\n","const path = require('path');\r\nconst http = require('http');\r\nconst https = require('https');\r\nconst qs = require('querystring');\r\nconst zlib = require('zlib');\r\nconst { URL } = require('url');\r\n\r\nconst CentraResponse = require('./CentraResponse');\r\n\r\nmodule.exports = class CentraRequest {\r\n\r\n\tconstructor(url, method = 'GET') {\r\n\t\tthis.url = typeof url === 'string' ? new URL(url) : url;\r\n\t\tthis.httpMethod = method;\r\n\t\tthis.data = null;\r\n\t\tthis.sendDataAs = null;\r\n\t\tthis.reqHeaders = {};\r\n\t\tthis.streamEnabled = false;\r\n\t\tthis.compressionEnabled = false;\r\n\t\tthis.coreOptions = {};\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tquery(a1, a2) {\r\n\t\tif (typeof a1 === 'object') {\r\n\t\t\tObject.keys(a1).forEach(queryKey => {\r\n\t\t\t\tthis.url.searchParams.append(queryKey, a1[queryKey]);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.url.searchParams.append(a1, a2);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpath(relativePath) {\r\n\t\tthis.url.pathname = path.join(this.url.pathname, relativePath);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tbody(data, sendAs) {\r\n\t\tthis.sendDataAs = typeof data === 'object' && !sendAs && !Buffer.isBuffer(data) ? 'json' : sendAs ? sendAs.toLowerCase() : 'buffer';\r\n\t\tthis.data = this.sendDataAs === 'form' ? qs.stringify(data) : this.sendDataAs === 'json' ? JSON.stringify(data) : data;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\theader(a1, a2) {\r\n\t\tif (typeof a1 === 'object') {\r\n\t\t\tObject.keys(a1).forEach(headerName => {\r\n\t\t\t\tthis.reqHeaders[headerName.toLowerCase()] = a1[headerName];\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.reqHeaders[a1.toLowerCase()] = a2;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tmethod(method) {\r\n\t\tthis.httpMethod = method;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\ttimeout(timeout) {\r\n\t\tthis.coreOptions.timeout = timeout;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tasync json() {\r\n\t\tconst res = await this.send();\r\n\t\treturn res.json;\r\n\t}\r\n\r\n\tasync raw() {\r\n\t\tconst res = await this.send();\r\n\t\treturn res.body;\r\n\t}\r\n\r\n\tasync text() {\r\n\t\tconst res = await this.send();\r\n\t\treturn res.text;\r\n\t}\r\n\r\n\tsend() {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tif (this.data) {\r\n\t\t\t\tif (!this.reqHeaders.hasOwnProperty('content-type')) {\r\n\t\t\t\t\tif (this.sendDataAs === 'json') this.reqHeaders['content-type'] = 'application/json';\r\n\r\n\t\t\t\t\telse if (this.sendDataAs === 'form') this.reqHeaders['content-type'] = 'application/x-www-form-urlencoded';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!this.reqHeaders.hasOwnProperty('content-length')) this.reqHeaders['content-length'] = Buffer.byteLength(this.data);\r\n\t\t\t}\r\n\r\n\t\t\tconst options = {\r\n\t\t\t\tprotocol: this.url.protocol,\r\n\t\t\t\thost: this.url.hostname,\r\n\t\t\t\tport: this.url.port,\r\n\t\t\t\tpath: this.url.pathname + this.url.search,\r\n\t\t\t\tmethod: this.httpMethod,\r\n\t\t\t\theaders: this.reqHeaders,\r\n\t\t\t\t...this.coreOptions\r\n\t\t\t};\r\n\r\n\t\t\tlet req;\r\n\r\n\t\t\tconst resHandler = res => {\r\n\t\t\t\tlet stream = res;\r\n\r\n\t\t\t\tif (this.compressionEnabled) {\r\n\t\t\t\t\tif (res.headers['content-encoding'] === 'gzip') stream = res.pipe(zlib.createGunzip());\r\n\r\n\t\t\t\t\telse if (res.headers['content-encoding'] === 'deflate') stream = res.pipe(zlib.createInflate());\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet centraRes;\r\n\r\n\t\t\t\tif (this.streamEnabled) {\r\n\t\t\t\t\tresolve(stream);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcentraRes = new CentraResponse(res);\r\n\r\n\t\t\t\t\tstream.on('error', err => {\r\n\t\t\t\t\t\treject(err);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tstream.on('data', chunk => {\r\n\t\t\t\t\t\tcentraRes._addChunk(chunk);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tstream.on('end', () => {\r\n\t\t\t\t\t\tresolve(centraRes);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tif (this.url.protocol === 'http:') req = http.request(options, resHandler);\r\n\r\n\t\t\telse if (this.url.protocol === 'https:') req = https.request(options, resHandler);\r\n\r\n\t\t\telse throw new Error(`Bad URL protocol: ${this.url.protocol}`);\r\n\r\n\t\t\treq.on('error', err => {\r\n\t\t\t\treject(err);\r\n\t\t\t});\r\n\r\n\t\t\tif (this.data) req.write(this.data);\r\n\r\n\t\t\treq.end();\r\n\t\t});\r\n\t}\r\n\r\n};\r\n","module.exports = class CentraResponse {\n\n\tconstructor(res) {\n\t\tthis.coreRes = res;\n\t\tthis.body = Buffer.alloc(0);\n\n\t\tthis.headers = res.headers;\n\t\tthis.statusCode = res.statusCode;\n\t}\n\n\t_addChunk(chunk) {\n\t\tthis.body = Buffer.concat([this.body, chunk]);\n\t}\n\n\tget json() {\n\t\treturn JSON.parse(this.body);\n\t}\n\n\tget text() {\n\t\treturn this.body.toString();\n\t}\n\n};\n","import Returnobject from '../@types/Returnobject';\nimport apiUrl from '../util/Constants';\nimport http from '../util/http';\nimport msg from '../util/msg';\n\nconst createNewPaste = async (\n  namespace: string,\n  token: string,\n  text: string,\n  customKey = ''\n): Promise<void> => {\n  let url = apiUrl.createNewPaste.replace('%%namespace%%', namespace);\n  if (customKey !== '') url = url + '/' + customKey;\n  const res: Returnobject = await http.POST(url, token, {\n    key: 'content',\n    value: text\n  });\n  if (!res.error && res.data) {\n    msg.success(\n      `Heres your link: ${apiUrl.baseUrl}/${namespace}/${res.data.key}`\n    );\n  } else {\n    msg.warn(`Something went wrong, please try again.`);\n  }\n};\n\nexport default createNewPaste;\n","// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport deleteNamespace from './namespaces/deleteNamespace';\nimport createNewPaste from './elements/createNewPaste';\nimport resetToken from './namespaces/resetToken';\nimport submitNew from './namespaces/submitNew';\nimport register from './namespaces/register';\nimport modify from './namespaces/modify';\nimport * as vscode from 'vscode';\nimport msg from './util/msg';\n\n// this method is called when your extension is activated\n// your extension is activated the very first time the command is executed\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport async function activate(context: vscode.ExtensionContext) {\n  // Use the console to output diagnostic information (console.log) and errors (console.error)\n  // This line of code will only be executed once when your extension is activated\n  console.log('Congratulations, your extension \"vsx0\" is now active!');\n\n  // The command has been defined in the package.json file\n  // Now provide the implementation of the command with registerCommand\n  // The commandId parameter must match the command field in package.json\n  const paste_disposable = vscode.commands.registerCommand(\n    'vsx0.paste',\n    async () => {\n      // The code you place here will be executed every time your command is executed\n\n      const editor = vscode.window.activeTextEditor;\n\n      if (!editor) {\n        msg.error('No Editor open at the moment as it seems');\n        return;\n      }\n      const text = editor.document.getText(editor.selection);\n      if (!text) return msg.warn('No text selected');\n\n      const tokens = await context.secrets.get('x0_tokens');\n      if (!tokens) {\n        msg.warn('I was unable to find any saved namespaces.');\n        const registerOrSubmitExisting = await vscode.window.showQuickPick([\n          'Register new namespace',\n          'Submit already existing namespace and token'\n        ]);\n        if (registerOrSubmitExisting) {\n          if (registerOrSubmitExisting.startsWith('Submit')) {\n            await submitNew(context);\n          } else if (registerOrSubmitExisting.startsWith('Register')) {\n            await register(context);\n          }\n        }\n      } else {\n        // get token(s)(if theres more than one show user select input) and send request to x0 api\n        const parsedTokens = JSON.parse(tokens);\n        const quickPickOptionsToShow = [];\n        Object.keys(parsedTokens).forEach((namespace) =>\n          quickPickOptionsToShow.push(namespace)\n        );\n        quickPickOptionsToShow.push(\n          '> Register a new namespace (Requires invite)',\n          '> Submit a new namespace and save it in memory.',\n          '> Modify an existing namespace (eg. when your token has changed)',\n          '> Reset token for existing namespace (if your token ever gets compromised)',\n          // Note: show user the token when deleting namespace, also show message if\n          // ns should also be deleted on server\n          '> Delete an existing namespace (Does not delete the namespace from the server!)'\n        );\n        const selectNameSpace = await vscode.window.showQuickPick(\n          quickPickOptionsToShow,\n          {\n            placeHolder: 'Pick which namespace you want to use'\n          }\n        );\n        if (!selectNameSpace) return;\n\n        if (selectNameSpace.includes('> Delete an existing namespace')) {\n          return await deleteNamespace(context);\n        } else if (selectNameSpace.includes('> Reset token')) {\n          return await resetToken(context);\n        } else if (selectNameSpace.includes('> Modify an')) {\n          return await modify(context);\n        } else if (selectNameSpace.includes('> Register')) {\n          return await register(context);\n        } else if (selectNameSpace.startsWith('> Submit a')) {\n          return await submitNew(context);\n        }\n\n        const customKey = await vscode.window.showInputBox({\n          prompt:\n            'Do you want to use a custom key for this paste? If so enter it now. If not just cancel this input',\n          placeHolder: '\"github\" or \"readme\"for example.'\n        });\n\n        await createNewPaste(\n          selectNameSpace,\n          parsedTokens[selectNameSpace],\n          text,\n          customKey\n        );\n      }\n    }\n  );\n\n  context.subscriptions.push(paste_disposable);\n}\n\n// this method is called when your extension is deactivated\n// eslint-disable-next-line\nexport function deactivate() {}\n","import StorageProvider from '../util/StorageProvider';\nimport { ExtensionContext, window } from 'vscode';\nimport msg from '../util/msg';\n\nconst deleteNamespace = async (context: ExtensionContext): Promise<void> => {\n  const allTokens = await StorageProvider.getAll(context);\n  const nameSpaceToDelete = await window.showQuickPick(Object.keys(allTokens), {\n    placeHolder:\n      'Pick what namespace to delete from memory (will not be deleted from the server!)'\n  });\n  if (!nameSpaceToDelete) return;\n  await StorageProvider.delete(context, nameSpaceToDelete);\n  msg.success(`Deleted \"${nameSpaceToDelete}\" from memory.`);\n};\n\nexport default deleteNamespace;\n","import StorageProvider from '../util/StorageProvider';\nimport { ExtensionContext, window } from 'vscode';\nimport msg from '../util/msg';\n\nconst modify = async (context: ExtensionContext): Promise<void> => {\n  const allTokens = await StorageProvider.getAll(context);\n  const nameSpaceToModify = await window.showQuickPick(Object.keys(allTokens), {\n    placeHolder: 'Pick what namespace to modify'\n  });\n  if (!nameSpaceToModify) return;\n  const newToken = await window.showInputBox({\n    prompt: `Enter the new token for \"${nameSpaceToModify}\"`,\n    placeHolder: 'asrighbaeeeehgkjalhgujgeruihjĝreuhgfre'\n  });\n  if (!newToken) return;\n  await StorageProvider.set(context, nameSpaceToModify, newToken);\n  msg.success(`Updated \"${nameSpaceToModify}\" and saved the new token`);\n};\n\nexport default modify;\n","import StorageProvider from '../util/StorageProvider';\nimport Returnobject from '../@types/Returnobject';\nimport { ExtensionContext, window } from 'vscode';\nimport apiUrl from '../util/Constants';\nimport http from '../util/http';\nimport msg from '../util/msg';\n\nconst register = async (context: ExtensionContext): Promise<void> => {\n  const namespace = await window.showInputBox({\n    prompt: 'Enter your desired name for the namespace now',\n    placeHolder: '\"vsx0\"for example'\n  });\n  if (!namespace) return;\n  const invite = await window.showInputBox({\n    prompt: 'Enter your invite. This is required to register a namespace.'\n  });\n  if (!invite) return;\n\n  console.log(namespace, invite);\n  const res: Returnobject = await http.POST(\n    apiUrl.register.replace('%%namespace%%', namespace),\n    '',\n    {\n      key: 'invite',\n      value: invite\n    }\n  );\n  console.log(res);\n  if (!res.data.error && res.data.token) {\n    await StorageProvider.set(context, namespace, res.data.token);\n    msg.success(\n      `Registered and saved \"${namespace}\" for you. Heres the token: \"${res.data.token}\" (Save it well!)`\n    );\n  }\n};\n\nexport default register;\n","import StorageProvider from '../util/StorageProvider';\nimport Returnobject from '../@types/Returnobject';\nimport { ExtensionContext, window } from 'vscode';\nimport apiUrl from '../util/Constants';\nimport http from '../util/http';\nimport msg from '../util/msg';\n\nconst resetToken = async (context: ExtensionContext): Promise<void> => {\n  const allTokens = await StorageProvider.getAll(context);\n  const namespace = await window.showQuickPick(Object.keys(allTokens), {\n    placeHolder: 'Pick the namespace to reset'\n  });\n  if (!namespace) return;\n  const res: Returnobject = await http.POST(\n    apiUrl.resetToken.replace('%%namespace%%', namespace),\n    allTokens[namespace],\n    {}\n  );\n  if (!res.error && res.data.token) {\n    await StorageProvider.set(context, namespace, res.data.token);\n    msg.success(\n      `Reset the namespace \"${namespace}\" for you. Heres the new token: \"${res.data.token}\"`\n    );\n  }\n};\n\nexport default resetToken;\n","import StorageProvider from '../util/StorageProvider';\nimport { ExtensionContext, window } from 'vscode';\nimport msg from '../util/msg';\n\nconst submitNew = async (context: ExtensionContext): Promise<void> => {\n  const nameSpace = await window.showInputBox({\n    prompt: 'Enter your already existing namespace',\n    placeHolder: 'example'\n  });\n  if (!nameSpace) return;\n  const userToken = await window.showInputBox({\n    prompt: 'Enter the token now, it will look something like this: ',\n    placeHolder: 'fbaelzugfjwnwara7z4hg89guab4-afrg7euj4e.awf7gzb'\n  });\n  if (!userToken) return;\n  try {\n    await StorageProvider.set(context, nameSpace, userToken);\n    msg.success(`Saved the namespace \"${nameSpace}\"!`);\n  } catch (e) {\n    msg.error(\n      'Something went wrong while trying to save your namespace, please try again.'\n    );\n  }\n};\n\nexport default submitNew;\n","// apiUrlV1 = 'https://api.x0.tf/v1/';\n\nconst apiUrl = {\n  //  const url = apiUrlV1 + 'namespaces/' + namespace;\n  baseUrl: 'https://x0.tf/',\n  register: 'https://api.x0.tf/v1/namespaces/%%namespace%%',\n  resetToken: 'https://api.x0.tf/v1/namespaces/%%namespace%%/resetToken',\n  createNewPaste: 'https://api.x0.tf/v1/elements/%%namespace%%/paste'\n};\n\nexport default apiUrl;\n","import { ExtensionContext } from 'vscode';\n\nconst storageProvider = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  get: async (\n    context: ExtensionContext,\n    key: string\n  ): Promise<string | void> => {\n    const objectToParse = await context.secrets.get('x0_tokens');\n    objectToParse ? await JSON.parse(objectToParse)[key] : undefined;\n  },\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  getAll: async (context: ExtensionContext): Promise<any> => {\n    const objectToParse = await context.secrets.get('x0_tokens');\n    objectToParse ? await JSON.parse(objectToParse) : undefined;\n  },\n  set: async (\n    context: ExtensionContext,\n    key: string,\n    value: string\n  ): Promise<void> => {\n    const objectToParse = await context.secrets.get('x0_tokens');\n    if (objectToParse) {\n      const parsedObject = JSON.parse(objectToParse);\n      parsedObject[key] = value;\n      await context.secrets.delete('x0_tokens');\n      return context.secrets.store('x0_tokens', JSON.stringify(parsedObject));\n    } else {\n      const tokenObjectToStoreLater = {};\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      tokenObjectToStoreLater[key] = value;\n      return context.secrets.store(\n        'x0_tokens',\n        JSON.stringify(tokenObjectToStoreLater)\n      );\n    }\n  },\n  delete: async (context: ExtensionContext, key: string): Promise<boolean> => {\n    const objectToParse = await context.secrets.get('x0_tokens');\n    if (objectToParse) {\n      const parsedObject = JSON.parse(objectToParse);\n      delete parsedObject[key];\n      try {\n        await context.secrets.store('x0_tokens', JSON.stringify(parsedObject));\n      } catch (e) {\n        return false;\n      }\n      return true;\n    }\n    return false;\n  },\n  deleteAll: async (context: ExtensionContext): Promise<void> => {\n    return context.secrets.delete('x0_tokens');\n  }\n};\n\nexport default storageProvider;\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport * as c from '@aero/centra';\nimport Returnobject from '../@types/Returnobject';\n\n// const apiUrlV1 = 'https://api.x0.tf/v1/';\nconst returnobject: Returnobject = { error: false };\n\nconst http = {\n  // paste: async (\n  //   namespace: string,\n  //   token: string,\n  //   text: string,\n  //   key?: string\n  // ): Promise<Returnobject> => {\n  //   let url = apiUrlV1 + 'elements/' + namespace + '/paste';\n  //   if (key) url = url + '/' + key;\n  //   const response = await c(url, 'POST')\n  //     .header('Authorization', 'Bearer ' + token)\n  //     .body(\n  //       {\n  //         content: text\n  //       },\n  //       'json'\n  //     )\n  //     .send();\n  //   if (response.statusCode >= 200 && response.statusCode <= 300) {\n  //     try {\n  //       returnobject.data = response.json();\n  //     } catch (e) {\n  //       returnobject.error = true;\n  //       returnobject.errortrace = e;\n  //       returnobject.data = response;\n  //     }\n  //   } else {\n  //     try {\n  //       returnobject.error = true;\n  //       returnobject.errormsg = await response;\n  //     } catch (e) {\n  //       returnobject.error = true;\n  //       returnobject.errortrace = e;\n  //       returnobject.data = response;\n  //     }\n  //   }\n  //   return returnobject;\n  // },\n  // register: async (\n  //   namespace: string,\n  //   invite: string\n  // ): Promise<Returnobject> => {\n  //   const url = apiUrlV1 + 'namespaces/' + namespace;\n  //   const response = await c(url, 'POST')\n  //     .body(\n  //       {\n  //         invite: invite\n  //       },\n  //       'json'\n  //     )\n  //     .send();\n  //   if (response.statusCode >= 200 && response.statusCode <= 300) {\n  //     try {\n  //       returnobject.data = response.json();\n  //     } catch (e) {\n  //       returnobject.error = true;\n  //       returnobject.errortrace = e;\n  //       returnobject.data = response;\n  //     }\n  //   } else {\n  //     returnobject.error = true;\n  //     returnobject.data = response;\n  //   }\n  //   return returnobject;\n  // },\n  // resetToken: async (\n  //   namespace: string,\n  //   token: string\n  // ): Promise<Returnobject> => {\n  //   const url = apiUrlV1 + 'namespaces/' + namespace + '/resetToken';\n  //   const res = await c(url, 'POST')\n  //     .header('Authorization', 'Bearer ' + token)\n  //     .send();\n\n  //   console.log(res);\n  //   returnobject.data = res;\n  //   if (res.statusCode >= 200 && res.statusCode <= 300) {\n  //     try {\n  //       returnobject.data = await res.body;\n  //     } catch (e) {\n  //       returnobject.error = true;\n  //       returnobject.errortrace = e;\n  //     }\n  //   }\n  //   return returnobject;\n  // },\n\n  POST: async (\n    url: string,\n    token: string,\n    { key, value }: { key?: string | undefined; value?: string | undefined }\n  ): Promise<Returnobject> => {\n    console.log(url, token);\n    const bodyObject = {};\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    bodyObject[key] = value;\n    try {\n      const response = await c(url, 'POST')\n        .header('Authorization', 'Bearer ' + token)\n        .body(bodyObject, 'json')\n        .send();\n      returnobject.data = JSON.parse(response.body.toString());\n      return returnobject;\n    } catch (e) {\n      console.error(e);\n      returnobject.error = true;\n      returnobject.errortrace = e;\n      returnobject.errormsg = e.toString();\n      return returnobject;\n    }\n  }\n};\n\nexport default http;\n","import { window } from 'vscode';\n\nconst msg = {\n  info: (msg: string): Thenable<string | undefined> =>\n    window.showInformationMessage(msg),\n  warn: (msg: string): Thenable<string | undefined> =>\n    window.showWarningMessage(msg),\n  error: (msg: string): Thenable<string | undefined> =>\n    window.showErrorMessage(msg),\n  success: (msg: string): Thenable<string | undefined> =>\n    window.showInformationMessage('✅ ' + msg)\n};\n\nexport default msg;\n","module.exports = require(\"http\");;","module.exports = require(\"https\");;","module.exports = require(\"path\");;","module.exports = require(\"querystring\");;","module.exports = require(\"url\");;","module.exports = require(\"vscode\");;","module.exports = require(\"zlib\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(112);\n"],"sourceRoot":""}